name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  Integration_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Load Cache Keys
        uses: actions/cache@v1
        id: cache
        with:
          path: docker-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - name: Load cached Docker layers
        run: |
          if [ -d "docker-cache" ]; then
            cat docker-cache/x* > base.tar
            docker load < base.tar
            if [ -f docker-cache/api.tar ]; then
              docker load < docker-cache/api.tar
            fi
            rm -rf docker-cache
            rm -rf base.tar
          fi
      - name: Build integration test images
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          docker-compose -f docker-compose.yml -f docker-compose_tests.yml build
          mkdir docker-cache
          docker save oneseismic.azurecr.io/base $(docker history -q oneseismic.azurecr.io/base | awk '!/<missing>/{print}') > base.tar
          docker save oneseismic.azurecr.io/api $(docker history -q oneseismic.azurecr.io/api | awk '!/<missing>/{print}') > docker-cache/api.tar
          split -b 100m base.tar docker-cache/x
          rm -rf base.tar
      - name: Run integration tests
        if: success()
        run: docker-compose -f docker-compose.yml -f docker-compose_tests.yml up --exit-code-from test
